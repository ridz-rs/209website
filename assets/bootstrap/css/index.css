@import url("https://fonts.googleapis.com/css?family=Montserrat:100");
@import url("https://fonts.googleapis.com/css?family=Lato:300,900");
html, body, h1 {
  padding: 0;
  margin: 0;
  font-family: "Montserrat", sans-serif;
}

html {
  scroll-behavior: smooth;
}

body {
  background-color: #fff;
}

#app {
  background: #0a0a0a;
  height: 50vh;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(rgba(10, 10, 10, 0.6), rgba(0, 0, 0, 0.9)), repeating-linear-gradient(0, transparent, transparent 2px, black 3px, black 3px), url("https://images.unsplash.com/photo-1506399558188-acca6f8cbf41?ixlib=rb-0.3.5&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjE0NTg5fQ&s=7118759521e3184778a3b5e010e202c6");
  background-size: cover;
  background-position: center;
  z-index: 1;
}

#wrapper {
  text-align: center;
}

.sub {
  color: #64dcdc;
  letter-spacing: 1em;
}

/* // Here's the meat and potatoes. */
/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
  /* // Creates a copy before our text.  */
  /* // Creates a copy after our text. Note comments from ::before. */
}
.glitch::before {
  /* // Duplicates our text with the mixin. */
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* // Scoots text slightly to the left for the color offset. */
  left: 2px;
  /* // Creates the color 'shadow' that happens on the glitch. */
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(95px, 9999px, 93px, 0);
    transform: skew(0.39deg);
  }
  5% {
    clip: rect(58px, 9999px, 57px, 0);
    transform: skew(0.35deg);
  }
  10% {
    clip: rect(37px, 9999px, 54px, 0);
    transform: skew(0.42deg);
  }
  15% {
    clip: rect(93px, 9999px, 40px, 0);
    transform: skew(0.52deg);
  }
  20% {
    clip: rect(2px, 9999px, 97px, 0);
    transform: skew(0.12deg);
  }
  25% {
    clip: rect(57px, 9999px, 92px, 0);
    transform: skew(0.88deg);
  }
  30% {
    clip: rect(88px, 9999px, 62px, 0);
    transform: skew(0.56deg);
  }
  35% {
    clip: rect(34px, 9999px, 16px, 0);
    transform: skew(0.01deg);
  }
  40% {
    clip: rect(15px, 9999px, 9px, 0);
    transform: skew(0.09deg);
  }
  45% {
    clip: rect(34px, 9999px, 59px, 0);
    transform: skew(0.47deg);
  }
  50% {
    clip: rect(29px, 9999px, 95px, 0);
    transform: skew(0.81deg);
  }
  55% {
    clip: rect(98px, 9999px, 78px, 0);
    transform: skew(0.98deg);
  }
  60% {
    clip: rect(65px, 9999px, 62px, 0);
    transform: skew(0.65deg);
  }
  65% {
    clip: rect(93px, 9999px, 24px, 0);
    transform: skew(0.19deg);
  }
  70% {
    clip: rect(91px, 9999px, 51px, 0);
    transform: skew(0.87deg);
  }
  75% {
    clip: rect(76px, 9999px, 42px, 0);
    transform: skew(0.11deg);
  }
  80% {
    clip: rect(98px, 9999px, 90px, 0);
    transform: skew(0.42deg);
  }
  85% {
    clip: rect(97px, 9999px, 79px, 0);
    transform: skew(0.49deg);
  }
  90% {
    clip: rect(84px, 9999px, 17px, 0);
    transform: skew(0.05deg);
  }
  95% {
    clip: rect(43px, 9999px, 67px, 0);
    transform: skew(0.86deg);
  }
  100% {
    clip: rect(72px, 9999px, 86px, 0);
    transform: skew(0.5deg);
  }
}
/* // Same deal, just duplicated for ultra randomness. */
@keyframes glitch-anim2 {
  0% {
    clip: rect(2px, 9999px, 100px, 0);
    transform: skew(0.14deg);
  }
  5% {
    clip: rect(88px, 9999px, 70px, 0);
    transform: skew(0.19deg);
  }
  10% {
    clip: rect(8px, 9999px, 85px, 0);
    transform: skew(0.46deg);
  }
  15% {
    clip: rect(76px, 9999px, 53px, 0);
    transform: skew(0.75deg);
  }
  20% {
    clip: rect(28px, 9999px, 9px, 0);
    transform: skew(0.38deg);
  }
  25% {
    clip: rect(7px, 9999px, 72px, 0);
    transform: skew(0.6deg);
  }
  30% {
    clip: rect(35px, 9999px, 27px, 0);
    transform: skew(0.73deg);
  }
  35% {
    clip: rect(20px, 9999px, 44px, 0);
    transform: skew(0.56deg);
  }
  40% {
    clip: rect(19px, 9999px, 46px, 0);
    transform: skew(0.92deg);
  }
  45% {
    clip: rect(70px, 9999px, 90px, 0);
    transform: skew(0.48deg);
  }
  50% {
    clip: rect(84px, 9999px, 96px, 0);
    transform: skew(0.36deg);
  }
  55% {
    clip: rect(15px, 9999px, 95px, 0);
    transform: skew(0.42deg);
  }
  60% {
    clip: rect(71px, 9999px, 7px, 0);
    transform: skew(0.05deg);
  }
  65% {
    clip: rect(26px, 9999px, 2px, 0);
    transform: skew(0.51deg);
  }
  70% {
    clip: rect(66px, 9999px, 92px, 0);
    transform: skew(0.78deg);
  }
  75% {
    clip: rect(63px, 9999px, 9px, 0);
    transform: skew(0.29deg);
  }
  80% {
    clip: rect(41px, 9999px, 75px, 0);
    transform: skew(0.93deg);
  }
  85% {
    clip: rect(29px, 9999px, 32px, 0);
    transform: skew(0.25deg);
  }
  90% {
    clip: rect(54px, 9999px, 36px, 0);
    transform: skew(0.95deg);
  }
  95% {
    clip: rect(75px, 9999px, 13px, 0);
    transform: skew(0.54deg);
  }
  100% {
    clip: rect(82px, 9999px, 70px, 0);
    transform: skew(0.63deg);
  }
}
/* // Does the same deal as before, but now only skews. Used for main text. */
@keyframes glitch-skew {
  0% {
    transform: skew(-1deg);
  }
  10% {
    transform: skew(-2deg);
  }
  20% {
    transform: skew(-3deg);
  }
  30% {
    transform: skew(4deg);
  }
  40% {
    transform: skew(-1deg);
  }
  50% {
    transform: skew(5deg);
  }
  60% {
    transform: skew(0deg);
  }
  70% {
    transform: skew(0deg);
  }
  80% {
    transform: skew(-2deg);
  }
  90% {
    transform: skew(5deg);
  }
  100% {
    transform: skew(0deg);
  }
}
.arrowcontainer {
  display: block;
  width: 30px;
  height: 80px;
  position: relative;
  margin-left: 50%;
  margin-top: 15%;
  transform: translate(-50%, -50%) rotateZ(0deg);
}
.arrowcontainer:hover {
  cursor: pointer;
}
.arrowcontainer:hover .arrow {
  top: 50%;
}
.arrowcontainer:hover .arrow:before {
  transform: translate(-50%, -50%) rotateZ(-30deg);
}
.arrowcontainer:hover .arrow:after {
  transform: translate(-50%, -50%) rotateZ(30deg);
}

.arrow {
  position: relative;
  left: 50%;
  transition: all 0.4s ease;
}
.arrow:before, .arrow:after {
  transition: all 0.4s ease;
  content: "";
  display: block;
  position: absolute;
  transform-origin: bottom right;
  background: #000;
  width: 4px;
  height: 30px;
  border-radius: 10px;
  transform: translate(-50%, -50%) rotateZ(-45deg);
}
.arrow:after {
  transform-origin: bottom left;
  transform: translate(-50%, -50%) rotateZ(45deg);
}
.arrow:nth-child(1) {
  opacity: 0.3;
  top: 35%;
}
.arrow:nth-child(2) {
  opacity: 0.6;
  top: 55%;
}
.arrow:nth-child(3) {
  opacity: 0.9;
  top: 75%;
}

*, :after, :before {
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  background: #eee;
  animation: fade-in 3s ease-in-out forwards;
}

strong {
  font-weight: 900;
}

.canvas-wrapper {
  display: flex;
  justify-content: space-evenly;
  height: 100%;
  width: 1500px;
}
.canvas-wrapper .canvas + .canvas {
  margin-left: 40px;
}

.canvas {
  position: relative;
  width: 400px;
  height: 400px;
  padding: 20px;
  color: inherit;
  text-decoration: none;
  margin-top: 120px;
  left: -12%;
}

.canvas_border {
  position: absolute;
  top: 40px;
  left: -40px;
  height: 100%;
  width: 100%;
  z-index: 0;
}
.canvas_border svg {
  height: 100%;
  width: 100%;
}

.rect-gradient {
  stroke-dasharray: 2000;
  stroke-dashoffset: 2000;
  animation: erase-line 1s ease-in-out forwards;
}

.canvas_img-wrapper {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transform: rotate(-10deg) skew(-10deg);
  overflow: hidden;
  background: white;
}

.canvas_img {
  transform: scale3d(0.9, 0.9, 0.9);
  opacity: 0.3;
  max-width: 200px;
  max-height: 200px;
}

.canvas_copy {
  position: absolute;
  bottom: 0;
  left: 85%;
  text-transform: uppercase;
  color: #dac527;
  z-index: 100;
}

.canvas_copy--left {
  left: -25%;
}

.canvas_copy_title {
  font-size: 62px;
  display: block;
  transform: translateX(-80px);
  transition: all 0.75s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0s;
  color: black;
}
.canvas_copy_title:nth-child(1) {
  transition-delay: 0.1s;
}
.canvas_copy_title:nth-child(2) {
  transition-delay: 0.2s;
}

.canvas_copy_subtitle {
  display: block;
  transform: rotate(270deg) translateY(-100%) translateX(calc(-100% - 80px));
  transform-origin: top left;
  position: absolute;
  left: 0;
  top: 8px;
  font-size: 24px;
  font-weight: 900;
  transition: all 0.75s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.35s;
}

.canvas_copy_details {
  display: block;
  transition: all 0.75s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.14s;
  transform: translateX(-80px);
}

.canvas_border, .canvas_img-wrapper, .canvas_img {
  transition: all 0.25s ease-in-out 0s;
}

.canvas_border, .canvas_img-wrapper {
  transform: rotate(-10deg) skew(-10deg);
}

.canvas_copy_title, .canvas_copy_subtitle, .canvas_copy_details {
  opacity: 0;
}

.canvas:hover .canvas_copy_title, .canvas:hover .canvas_copy_subtitle, .canvas:hover .canvas_copy_details, .canvas:hover .canvas_img {
  opacity: 1;
}
.canvas:hover .canvas_border, .canvas:hover .canvas_img-wrapper {
  transform: rotate(-14deg) skew(-14deg) scale(0.96);
}
.canvas:hover .canvas_img {
  transform: scale3d(1, 1, 1);
}
.canvas:hover .canvas_copy_title, .canvas:hover .canvas_copy_details {
  transform: translateX(0);
}
.canvas:hover .canvas_copy_subtitle {
  transform: rotate(270deg) translateY(-100%) translateX(-100%);
}
.canvas:hover .rect-gradient {
  animation: draw-line 3s cubic-bezier(0.19, 1, 0.22, 1) forwards;
}

@keyframes draw-line {
  from {
    stroke-dashoffset: 2000;
  }
  to {
    stroke-dashoffset: 0;
  }
}
@keyframes erase-line {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: 2000;
  }
}
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes draw-line {
  from {
    stroke-dashoffset: 2000;
  }
  to {
    stroke-dashoffset: 0;
  }
}
@keyframes erase-line {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: 2000;
  }
}
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
#loading {
  position: relative;
  top: 50%;
  margin: -30px auto;
  text-align: center;
}

.glow {
  color: #f00;
  text-shadow: 0px 0px 10px #f00;
}

span {
  display: inline-block;
  padding: 0 10px;
}

#youtube {
  font-size: 4em;
  margin-top: 5px;
}

.hr {
  width: 100%;
  height: 1px;
  display: block;
  position: relative;
  margin-bottom: 0em;
  padding: 2em 0;
}
.hr:after, .hr:before {
  content: "";
  position: absolute;
  width: 100%;
  height: 1px;
  bottom: 50%;
  left: 0;
}
.hr:before {
  background: linear-gradient(90deg, #000 0%, #000 50%, transparent 50%, transparent 100%);
  background-size: 15px;
  background-position: center;
  z-index: 1;
}
.hr:after {
  transition: opacity 0.3s ease, animation 0.3s ease;
  background: linear-gradient(to right, #62efab 5%, #F2EA7D 15%, #F2EA7D 25%, #FF8797 35%, #FF8797 45%, #e1a4f4 55%, #e1a4f4 65%, #82fff4 75%, #82fff4 85%, #62efab 95%);
  background-size: 200%;
  background-position: 0%;
  animation: bar 15s linear infinite;
}
@keyframes bar {
  0% {
    background-position: 0%;
  }
  100% {
    background-position: 200%;
  }
}

.hr.anim:before {
  background: linear-gradient(90deg, #000 0%, #000 5%, transparent 5%, transparent 10%, #000 10%, #000 15%, transparent 15%, transparent 20%, #000 20%, #000 25%, transparent 25%, transparent 30%, #000 30%, #000 35%, transparent 35%, transparent 40%, #000 40%, #000 45%, transparent 45%, transparent 50%, #000 50%, #000 55%, transparent 55%, transparent 60%, #000 60%, #000 65%, transparent 65%, transparent 70%, #000 70%, #000 75%, transparent 75%, transparent 80%, #000 80%, #000 85%, transparent 85%, transparent 90%, #000 90%, #000 95%, transparent 95%, transparent 100%);
  background-size: 150px;
  background-position: center;
  z-index: 1;
  animation: bar 120s linear infinite;
}
.hr.anim:hover:before {
  animation-duration: 20s;
}
.hr.anim:hover:after {
  animation-duration: 2s;
}

/*# sourceMappingURL=index.css.map */

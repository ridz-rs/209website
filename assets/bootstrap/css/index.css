@import url("https://fonts.googleapis.com/css?family=Montserrat:100");
@import url("https://fonts.googleapis.com/css?family=Lato:300,900");
html, body, h1 {
  padding: 0;
  margin: 0;
  font-family: "Montserrat", sans-serif;
}

html {
  scroll-behavior: smooth;
}

body {
  background-color: #fff;
}

#app {
  background: #0a0a0a;
  height: 50vh;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(rgba(10, 10, 10, 0.6), rgba(0, 0, 0, 0.9)), repeating-linear-gradient(0, transparent, transparent 2px, black 3px, black 3px), url("https://images.unsplash.com/photo-1506399558188-acca6f8cbf41?ixlib=rb-0.3.5&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjE0NTg5fQ&s=7118759521e3184778a3b5e010e202c6");
  background-size: cover;
  background-position: center;
  z-index: 1;
}

#wrapper {
  text-align: center;
}

.sub {
  color: #64dcdc;
  letter-spacing: 1em;
}

/* // Here's the meat and potatoes. */
/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
  /* // Creates a copy before our text.  */
  /* // Creates a copy after our text. Note comments from ::before. */
}
.glitch::before {
  /* // Duplicates our text with the mixin. */
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* // Scoots text slightly to the left for the color offset. */
  left: 2px;
  /* // Creates the color 'shadow' that happens on the glitch. */
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(59px, 9999px, 72px, 0);
    transform: skew(0.82deg);
  }
  5% {
    clip: rect(74px, 9999px, 89px, 0);
    transform: skew(0.88deg);
  }
  10% {
    clip: rect(7px, 9999px, 45px, 0);
    transform: skew(0.68deg);
  }
  15% {
    clip: rect(35px, 9999px, 84px, 0);
    transform: skew(0.51deg);
  }
  20% {
    clip: rect(50px, 9999px, 83px, 0);
    transform: skew(0.31deg);
  }
  25% {
    clip: rect(90px, 9999px, 71px, 0);
    transform: skew(0.58deg);
  }
  30% {
    clip: rect(50px, 9999px, 90px, 0);
    transform: skew(0.57deg);
  }
  35% {
    clip: rect(14px, 9999px, 18px, 0);
    transform: skew(0.79deg);
  }
  40% {
    clip: rect(75px, 9999px, 50px, 0);
    transform: skew(0.33deg);
  }
  45% {
    clip: rect(86px, 9999px, 64px, 0);
    transform: skew(0.53deg);
  }
  50% {
    clip: rect(64px, 9999px, 38px, 0);
    transform: skew(0.05deg);
  }
  55% {
    clip: rect(91px, 9999px, 23px, 0);
    transform: skew(0.83deg);
  }
  60% {
    clip: rect(70px, 9999px, 82px, 0);
    transform: skew(0.47deg);
  }
  65% {
    clip: rect(89px, 9999px, 100px, 0);
    transform: skew(0.07deg);
  }
  70% {
    clip: rect(62px, 9999px, 12px, 0);
    transform: skew(0.52deg);
  }
  75% {
    clip: rect(44px, 9999px, 84px, 0);
    transform: skew(0.55deg);
  }
  80% {
    clip: rect(11px, 9999px, 78px, 0);
    transform: skew(0.09deg);
  }
  85% {
    clip: rect(58px, 9999px, 6px, 0);
    transform: skew(0.5deg);
  }
  90% {
    clip: rect(35px, 9999px, 48px, 0);
    transform: skew(0.81deg);
  }
  95% {
    clip: rect(45px, 9999px, 49px, 0);
    transform: skew(0.64deg);
  }
  100% {
    clip: rect(72px, 9999px, 5px, 0);
    transform: skew(0.24deg);
  }
}
/* // Same deal, just duplicated for ultra randomness. */
@keyframes glitch-anim2 {
  0% {
    clip: rect(44px, 9999px, 64px, 0);
    transform: skew(0.99deg);
  }
  5% {
    clip: rect(1px, 9999px, 14px, 0);
    transform: skew(0.12deg);
  }
  10% {
    clip: rect(2px, 9999px, 79px, 0);
    transform: skew(0.18deg);
  }
  15% {
    clip: rect(7px, 9999px, 40px, 0);
    transform: skew(0.41deg);
  }
  20% {
    clip: rect(61px, 9999px, 59px, 0);
    transform: skew(0.02deg);
  }
  25% {
    clip: rect(88px, 9999px, 98px, 0);
    transform: skew(0.88deg);
  }
  30% {
    clip: rect(62px, 9999px, 93px, 0);
    transform: skew(0.44deg);
  }
  35% {
    clip: rect(5px, 9999px, 63px, 0);
    transform: skew(0.65deg);
  }
  40% {
    clip: rect(99px, 9999px, 33px, 0);
    transform: skew(0.81deg);
  }
  45% {
    clip: rect(28px, 9999px, 39px, 0);
    transform: skew(0.78deg);
  }
  50% {
    clip: rect(73px, 9999px, 24px, 0);
    transform: skew(0.64deg);
  }
  55% {
    clip: rect(30px, 9999px, 36px, 0);
    transform: skew(0.73deg);
  }
  60% {
    clip: rect(55px, 9999px, 34px, 0);
    transform: skew(0.51deg);
  }
  65% {
    clip: rect(33px, 9999px, 36px, 0);
    transform: skew(0.86deg);
  }
  70% {
    clip: rect(98px, 9999px, 75px, 0);
    transform: skew(0.16deg);
  }
  75% {
    clip: rect(29px, 9999px, 21px, 0);
    transform: skew(0.29deg);
  }
  80% {
    clip: rect(12px, 9999px, 95px, 0);
    transform: skew(0.35deg);
  }
  85% {
    clip: rect(71px, 9999px, 35px, 0);
    transform: skew(0.31deg);
  }
  90% {
    clip: rect(46px, 9999px, 14px, 0);
    transform: skew(0.45deg);
  }
  95% {
    clip: rect(96px, 9999px, 90px, 0);
    transform: skew(0.42deg);
  }
  100% {
    clip: rect(86px, 9999px, 65px, 0);
    transform: skew(0.47deg);
  }
}
/* // Does the same deal as before, but now only skews. Used for main text. */
@keyframes glitch-skew {
  0% {
    transform: skew(-3deg);
  }
  10% {
    transform: skew(-3deg);
  }
  20% {
    transform: skew(3deg);
  }
  30% {
    transform: skew(2deg);
  }
  40% {
    transform: skew(1deg);
  }
  50% {
    transform: skew(-1deg);
  }
  60% {
    transform: skew(-1deg);
  }
  70% {
    transform: skew(3deg);
  }
  80% {
    transform: skew(5deg);
  }
  90% {
    transform: skew(-2deg);
  }
  100% {
    transform: skew(1deg);
  }
}
.arrowcontainer {
  display: block;
  width: 30px;
  height: 80px;
  position: absolute;
  top: 90%;
  left: 50%;
  transform: translate(-50%, -50%) rotateZ(0deg);
}
.arrowcontainer:hover {
  cursor: pointer;
}
.arrowcontainer:hover .arrow {
  top: 50%;
}
.arrowcontainer:hover .arrow:before {
  transform: translate(-50%, -50%) rotateZ(-30deg);
}
.arrowcontainer:hover .arrow:after {
  transform: translate(-50%, -50%) rotateZ(30deg);
}

.arrow {
  position: absolute;
  left: 50%;
  transition: all 0.4s ease;
}
.arrow:before, .arrow:after {
  transition: all 0.4s ease;
  content: "";
  display: block;
  position: absolute;
  transform-origin: bottom right;
  background: #000;
  width: 4px;
  height: 30px;
  border-radius: 10px;
  transform: translate(-50%, -50%) rotateZ(-45deg);
}
.arrow:after {
  transform-origin: bottom left;
  transform: translate(-50%, -50%) rotateZ(45deg);
}
.arrow:nth-child(1) {
  opacity: 0.3;
  top: 35%;
}
.arrow:nth-child(2) {
  opacity: 0.6;
  top: 55%;
}
.arrow:nth-child(3) {
  opacity: 0.9;
  top: 75%;
}

#portfolio {
  background-color: #000;
}

*, :after, :before {
  box-sizing: border-box;
}

strong {
  font-weight: 900;
}

.canvas-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 100%;
  margin-top: 15%;
}
.canvas-wrapper .canvas + .canvas {
  margin-left: 40px;
}

.canvas {
  position: relative;
  display: block;
  width: 400px;
  height: 400px;
  padding: 20px;
  color: inherit;
  text-decoration: none;
}

.canvas_border {
  position: absolute;
  top: 40px;
  left: -40px;
  height: 100%;
  width: 100%;
  z-index: 0;
}
.canvas_border svg {
  height: 100%;
  width: 100%;
}

.rect-gradient {
  stroke-dasharray: 2000;
  stroke-dashoffset: 2000;
  animation: erase-line 1s ease-in-out forwards;
}

.canvas_img-wrapper {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transform: rotate(-10deg) skew(-10deg);
  overflow: hidden;
  background: white;
}

.canvas_img {
  transform: scale3d(0.9, 0.9, 0.9);
  opacity: 0.3;
  max-width: 300px;
  max-height: 300px;
}

.canvas_copy {
  position: absolute;
  bottom: 0;
  left: 85%;
  text-transform: uppercase;
  color: grey;
  z-index: 100;
}

.canvas_copy--left {
  left: -25%;
}

.canvas_copy_title {
  font-size: 62px;
  display: block;
  transform: translateX(-80px);
  transition: all 0.75s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0s;
  color: #dac527;
}
.canvas_copy_title:nth-child(1) {
  transition-delay: 0.1s;
}
.canvas_copy_title:nth-child(2) {
  transition-delay: 0.2s;
}

.canvas_copy_subtitle {
  display: block;
  transform: rotate(270deg) translateY(-100%) translateX(calc(-100% - 80px));
  transform-origin: top left;
  position: absolute;
  left: 0;
  top: 8px;
  font-size: 24px;
  font-weight: 900;
  transition: all 0.75s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.35s;
}

.canvas_copy_details {
  display: block;
  transition: all 0.75s cubic-bezier(0.68, -0.55, 0.265, 1.55) 0.14s;
  transform: translateX(-80px);
}

.canvas_border, .canvas_img-wrapper, .canvas_img {
  transition: all 0.25s ease-in-out 0s;
}

.canvas_border, .canvas_img-wrapper {
  transform: rotate(-10deg) skew(-10deg);
}

.canvas_copy_title, .canvas_copy_subtitle, .canvas_copy_details {
  opacity: 0;
}

.canvas:hover .canvas_copy_title, .canvas:hover .canvas_copy_subtitle, .canvas:hover .canvas_copy_details, .canvas:hover .canvas_img {
  opacity: 1;
}
.canvas:hover .canvas_border, .canvas:hover .canvas_img-wrapper {
  transform: rotate(-14deg) skew(-14deg) scale(0.96);
}
.canvas:hover .canvas_img {
  transform: scale3d(1, 1, 1);
}
.canvas:hover .canvas_copy_title, .canvas:hover .canvas_copy_details {
  transform: translateX(0);
}
.canvas:hover .canvas_copy_subtitle {
  transform: rotate(270deg) translateY(-100%) translateX(-100%);
}
.canvas:hover .rect-gradient {
  animation: draw-line 3s cubic-bezier(0.19, 1, 0.22, 1) forwards;
}

@keyframes draw-line {
  from {
    stroke-dashoffset: 2000;
  }
  to {
    stroke-dashoffset: 0;
  }
}
@keyframes erase-line {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: 2000;
  }
}
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
#loading {
  position: relative;
  top: 50%;
  margin: -30px auto;
  text-align: center;
}

.glow {
  color: #f00;
  text-shadow: 0px 0px 10px #f00;
}

span {
  display: inline-block;
  padding: 0 10px;
}

.arrowcontainer2 {
  display: block;
  width: 30px;
  height: 80px;
  position: relative;
  align-items: center;
  margin-left: 48%;
  margin-bottom: 5%;
  transform: translate(-50%, -50%) rotateZ(0deg);
}
.arrowcontainer2:hover {
  cursor: pointer;
}
.arrowcontainer2:hover .arrow2 {
  top: 50%;
}
.arrowcontainer2:hover .arrow2:before {
  transform: translate(-50%, -50%) rotateZ(-30deg);
}
.arrowcontainer2:hover .arrow2:after {
  transform: translate(-50%, -50%) rotateZ(30deg);
}

.arrow2 {
  position: absolute;
  left: 50%;
  transition: all 0.4s ease;
}
.arrow2:before, .arrow2:after {
  transition: all 0.4s ease;
  content: "";
  display: block;
  position: absolute;
  transform-origin: bottom right;
  background: white;
  width: 4px;
  height: 30px;
  border-radius: 10px;
  transform: translate(-50%, -50%) rotateZ(-45deg);
}
.arrow2:after {
  transform-origin: bottom left;
  transform: translate(-50%, -50%) rotateZ(45deg);
}
.arrow2:nth-child(1) {
  opacity: 0.3;
  top: 35%;
}
.arrow2:nth-child(2) {
  opacity: 0.6;
  top: 55%;
}
.arrow2:nth-child(3) {
  opacity: 0.9;
  top: 75%;
}

/*# sourceMappingURL=index.css.map */
